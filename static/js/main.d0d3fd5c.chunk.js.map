{"version":3,"sources":["components/FestivalBar.js","components/Home.js","components/Awards.js","components/Festival.js","components/Partners.js","components/Directory.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","appBar","backgroundColor","menuButton","marginRight","spacing","twitterButton","color","instaIcon","title","link","textDecoration","FestivalBar","classes","useState","drawer","setDrawer","toggleDrawer","className","AppBar","position","Toolbar","IconButton","onClick","edge","aria-label","Typography","variant","SwipeableDrawer","open","onClose","anchor","list","role","List","to","ListItem","button","ListItemIcon","ListItemText","primary","Divider","href","target","rel","Home","style","textAlign","Awards","Festival","Partners","Directory","Contact","App","class","component","Fader","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d0d3fd5c.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Divider from '@material-ui/core/Divider'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport ClassIcon from '@material-ui/icons/Class';\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport TransitionSwitch from 'react-router-transition-switch'\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    backgroundColor: '#448AFF'\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  twitterButton: {\r\n    marginRight: theme.spacing(1),\r\n    color: 'white',\r\n    backgroundColor: '#1E88E5'\r\n  },\r\n  instaIcon: {\r\n    color: 'white',\r\n    backgroundColor: '#EC407A',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n    color: 'rgba(0, 0, 0, 0.87)',\r\n  }\r\n}));\r\n\r\n\r\nexport default function FestivalBar() {\r\n  const classes = useStyles();\r\n\r\n  const [drawer, setDrawer] = useState(false);\r\n\r\n  function toggleDrawer() {\r\n    setDrawer(!drawer);\r\n\r\n  }\r\n\r\n  const sideList = side => (\r\n      <div\r\n        className={classes.list}\r\n        role=\"presentation\"\r\n        onClick={toggleDrawer}\r\n      >\r\n        <List>\r\n            <Link to=\"/\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon> <HomeIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Home\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/festival\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon> <WhatshotIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Festival\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/awards\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon> <ClassIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Awards\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Divider/>\r\n            <Link to=\"/partners\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon> <GroupIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Partners\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/directory\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon> <FolderOpenIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Directory\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to=\"/contact\" className={classes.link}>\r\n              <ListItem button>\r\n                <ListItemIcon> <ContactSupportIcon /></ListItemIcon>\r\n                <ListItemText primary=\"Contact Us\" />\r\n              </ListItem>\r\n            </Link>\r\n        </List>\r\n        <Divider />\r\n          <a href=\"https://www.facebook.com/keepit100essex\" className={classes.link} target=\"_blank\" rel=\"noopener\">\r\n          <ListItem button>\r\n              <ListItemIcon> <FacebookIcon /></ListItemIcon>\r\n              <ListItemText primary=\"Facebook\" />\r\n            </ListItem>\r\n          </a>\r\n          <a href=\"https://www.instagram.com/keepit100essex\" className={classes.link} target=\"_blank\" rel=\"noopener\">\r\n            <ListItem button>\r\n              <ListItemIcon> <InstagramIcon /></ListItemIcon>\r\n              <ListItemText primary=\"Instagram\" />\r\n            </ListItem>\r\n          </a>\r\n      </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton onClick={toggleDrawer}  edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Keep it 100\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SwipeableDrawer open={drawer} onClose={toggleDrawer} anchor=\"left\">\r\n        {sideList('left')}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>Home content here</div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport default function Awards() {\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>Award content here</div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function Festival() {\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>Festival content here</div>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nexport default function Partners() {\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>Partners go here</div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function Directory() {\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>Whatever the hell directory is goes here</div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport default function Contact() {\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>Contact content here</div>\r\n    )\r\n}\r\n","import React from 'react';\nimport FestivalBar from './components/FestivalBar'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport TransitionSwitch from 'react-router-transition-switch'\nimport Fader from 'react-fader'\n\nimport Home from './components/Home';\nimport Awards from './components/Awards';\nimport Festival from './components/Festival';\nimport Partners from './components/Partners';\nimport Directory from './components/Directory';\nimport Contact from './components/Contact';\n\n\nfunction App() {\n  return (\n    <Router>\n    <div class=\"root\">\n      <FestivalBar/>\n        <TransitionSwitch component={Fader}>\n          <Route path=\"/awards\" component={Awards}/>\n          <Route path=\"/festival\" component={Festival} />\n          <Route path=\"/partners\" component={Partners} />\n          <Route path=\"/directory\" component={Directory} />\n          <Route path=\"/contact\" component={Contact} />\n          <Route path=\"/\" component={Home} />\n        </TransitionSwitch>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}